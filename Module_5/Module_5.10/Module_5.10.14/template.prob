{"name": "OOP: 5.10.14", "url": "https://stepik.org/lesson/898481/step/14", "tests": [{"id": 0, "input": "row = Row(a='A', b='B', c='C')\n\nprint(row)\nprint(row.a, row.b, row.c)", "output": "Row(a='A', b='B', c='C')\nA B C"}, {"id": 1, "input": "row1 = Row(a=1, b=2, c=3)\nrow2 = Row(a=1, b=2, c=3)\nrow3 = Row(b=2, c=3, a=1)\n\nprint(row1 == row2)\nprint(hash(row1) == hash(row2))\nprint(row1 == row3)\nprint(hash(row1) == hash(row3))", "output": "True\nTrue\nFalse\nFalse"}, {"id": 2, "input": "row = Row(a=1, b=2, c=3)\n\ntry:\n    row.d = 4\nexcept AttributeError as e:\n    print(e)", "output": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043d\u043e\u0432\u043e\u0433\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430"}, {"id": 3, "input": "row = Row(a=1, b=2, c=3)\n\ntry:\n    row.a = 10\nexcept AttributeError as e:\n    print(e)", "output": "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e"}, {"id": 4, "input": "row = Row(a=1, b=2, c=3)\n\ntry:\n    del row.a\nexcept AttributeError as e:\n    print(e)", "output": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e"}, {"id": 5, "input": "rows = {Row(a=1, b=2, c=3): 10, Row(d=4, e=5, f=6): 20}\n\nprint(rows)", "output": "{Row(a=1, b=2, c=3): 10, Row(d=4, e=5, f=6): 20}"}, {"id": 6, "input": "row1 = Row()\nrows = [Row(a=66, b=69, country='China'), Row(a=35, b=42, country='Singapore'), Row(a=93, b=71, country='Mongolia'),\n        Row(a=10, b=82, country='Tajikistan'), Row(a=48, b=37, country='Anguilla'),\n        Row(a=49, b=90, country='Argentina'), Row(a=83, b=13, country='Montserrat'),\n        Row(a=93, b=67, country='Heard Island and McDonald Islands'), Row(a=47, b=36, country='Saint Martin'),\n        Row(a=8, b=65, country='Samoa'), Row(a=77, b=25, country='Rwanda'), Row(a=23, b=48, country='Tuvalu'),\n        Row(a=78, b=87, country='Gibraltar'), Row(a=99, b=59, country='Tajikistan'),\n        Row(a=96, b=79, country=\"Cote d'Ivoire\"), Row(a=36, b=91, country='Sri Lanka'),\n        Row(a=96, b=38, country='Libyan Arab Jamahiriya'), Row(a=30, b=14, country='Palestinian Territory'),\n        Row(a=15, b=26, country='Cambodia'), Row(a=71, b=86, country='Northern Mariana Islands'),\n        Row(a=58, b=95, country='Mauritius'), Row(a=81, b=73, country='Syrian Arab Republic'),\n        Row(a=17, b=61, country='Kazakhstan'), Row(a=42, b=60, country='French Southern Territories'),\n        Row(a=68, b=69, country='Tunisia'), Row(a=70, b=76, country='Malawi'), Row(a=38, b=63, country='Tonga'),\n        Row(a=36, b=45, country='Puerto Rico'), Row(a=46, b=30, country='Burundi'), Row(a=78, b=82, country='Malta'),\n        Row(a=27, b=53, country='Trinidad and Tobago'), Row(a=68, b=84, country='Monaco'),\n        Row(a=17, b=77, country='Lesotho'), Row(a=16, b=100, country='Jamaica'), Row(a=40, b=45, country='Morocco'),\n        Row(a=94, b=23, country='Bolivia'), Row(a=98, b=15, country='Equatorial Guinea'),\n        Row(a=13, b=22, country='Ukraine'), Row(a=73, b=21, country='Saint Helena'),\n        Row(a=58, b=35, country='Syrian Arab Republic'), Row(a=84, b=22, country='Djibouti'),\n        Row(a=11, b=93, country='Macao'), Row(a=86, b=47, country='Anguilla'), Row(a=72, b=42, country='Guyana'),\n        Row(a=18, b=31, country='Cambodia'), Row(a=30, b=31, country='Taiwan'), Row(a=73, b=45, country='Maldives'),\n        Row(a=54, b=35, country='Nauru'), Row(a=51, b=82, country='United States of America'),\n        Row(a=77, b=96, country='Angola'), Row(a=59, b=82, country='Luxembourg'), Row(a=74, b=15, country='Venezuela'),\n        Row(a=16, b=72, country='Korea'), Row(a=23, b=45, country='Mozambique'), Row(a=53, b=66, country='Swaziland'),\n        Row(a=95, b=64, country='Niger'), Row(a=56, b=34, country='Myanmar'),\n        Row(a=31, b=6, country='United States of America'), Row(a=15, b=29, country='Russian Federation'),\n        Row(a=48, b=69, country='Brazil'), Row(a=59, b=17, country='Liberia'), Row(a=68, b=26, country='Canada'),\n        Row(a=27, b=60, country='Liechtenstein'), Row(a=16, b=76, country='Belize'), Row(a=46, b=63, country='Chad'),\n        Row(a=78, b=24, country='Croatia'), Row(a=99, b=14, country='Croatia'), Row(a=39, b=45, country='Burkina Faso'),\n        Row(a=75, b=6, country='Latvia'), Row(a=33, b=9, country='Uganda'), Row(a=70, b=56, country='Congo'),\n        Row(a=17, b=84, country='Iran'), Row(a=91, b=53, country='Bulgaria'),\n        Row(a=78, b=85, country='Bosnia and Herzegovina'), Row(a=83, b=74, country='Mauritius'),\n        Row(a=49, b=87, country='Gambia'), Row(a=13, b=57, country='Turkmenistan'), Row(a=64, b=81, country='Ghana'),\n        Row(a=27, b=73, country=\"Cote d'Ivoire\"), Row(a=73, b=88, country='Isle of Man'),\n        Row(a=11, b=55, country='Guinea-Bissau'), Row(a=12, b=75, country='Mayotte'), Row(a=81, b=78, country='Congo'),\n        Row(a=38, b=13, country='Dominica'), Row(a=83, b=30, country='Taiwan'), Row(a=76, b=43, country='San Marino'),\n        Row(a=91, b=72, country='Kiribati'), Row(a=85, b=95, country='Costa Rica'),\n        Row(a=11, b=40, country='Holy See (Vatican City State)'), Row(a=99, b=76, country='Syrian Arab Republic'),\n        Row(a=70, b=70, country='San Marino'), Row(a=32, b=87, country='Nigeria'), Row(a=33, b=5, country='Lithuania'),\n        Row(a=59, b=9, country='Senegal'), Row(a=56, b=86, country='Vietnam'), Row(a=66, b=60, country='Angola'),\n        Row(a=98, b=56, country='Maldives'), Row(a=22, b=59, country='Brunei Darussalam'),\n        Row(a=98, b=57, country='Barbados'), Row(a=72, b=46, country='Djibouti')]\n\nfor row in rows:\n    print(row != row1)", "output": "True\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue"}, {"id": 7, "input": "row = Row(a=16, b=100, country='Jamaica')\nprint(row.__eq__(1))\nprint(row.__ne__(1.1))", "output": "NotImplemented\nNotImplemented"}, {"id": 8, "input": "row1 = Row(a=1, b=2, c=3)\nrow2 = Row(a=3, b=2, c=1)\nprint(row1 == row2)", "output": "False"}, {"id": 9, "input": "row1 = Row(a=1, b=2, c=3)\nrow2 = Row(b=1, a=2, c=3)\n\nprint(row1 == row2)\nprint(hash(row1) == hash(row2))", "output": "False\nFalse"}], "interactive": false, "memoryLimit": 256, "timeLimit": 15000, "srcPath": "c:\\Users\\asald\\Documents\\OOP\\Module_5\\Module_5.10\\Module_5.10.14\\problem.py", "group": "OOP"}