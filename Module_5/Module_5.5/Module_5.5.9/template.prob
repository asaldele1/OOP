{"name": "OOP: 5.5.9", "url": "https://stepik.org/lesson/805781/step/9", "tests": [{"id": 0, "input": "food1 = FoodInfo(10, 20, 30)\nfood2 = FoodInfo(10, 10, 20)\n\nprint(food1 + food2)\nprint(food1 * 2)\nprint(food1 / 2)\nprint(food1 // 2)", "output": "FoodInfo(20, 30, 50)\nFoodInfo(20, 40, 60)\nFoodInfo(5.0, 10.0, 15.0)\nFoodInfo(5, 10, 15)"}, {"id": 1, "input": "food1 = FoodInfo(10, 20, 30)\n\ntry:\n    food2 = (5, 10, 15) + food1\nexcept TypeError:\n    print('\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445')", "output": "\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445"}, {"id": 2, "input": "food1 = FoodInfo(10, 20, 30)\nnot_supported = [1826, -4950968.5187661, 'CpORszTrvuNBLTkwONAK', True,\n                 {'their': 1160, 'turn': True, 'administration': 75837.8091359427, 'consider': True},\n                 (4282, 'pEXkpjHTDfoOodeUvrxX', -65273.7710503699, -630510186.232982, 4626, -20236163552005.9),\n                 [9477, 'NevIfZUdzUJrJQMwZvOS', False, True],\n                 {False, -1700220.7807578, 'pevZgAzpRcsOVKRoTWsL', 'iQfadxHjqbThjFhieudU'}]\n\nfor item in not_supported:\n    try:\n        food2 = item + food1\n    except TypeError:\n        print('\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445')", "output": "\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445"}, {"id": 3, "input": "food1 = FoodInfo(10, 20, 30)\npfc = [(79, 89, 14), (71, 46, 54), (75, 82, 37), (97, 11, 68), (36, 22, 87), (12, 11, 76), (19, 87, 88), (88, 66, 18),\n       (76, 97, 19), (27, 61, 27), (18, 84, 15), (79, 96, 93), (83, 99, 33), (22, 57, 84), (66, 24, 38), (90, 61, 31),\n       (40, 91, 100), (32, 46, 49), (72, 36, 83), (75, 89, 75), (37, 50, 83), (79, 85, 65), (63, 11, 82), (77, 39, 23),\n       (29, 95, 81), (21, 51, 39), (100, 37, 76), (76, 51, 30), (70, 62, 96), (71, 95, 27), (54, 33, 34), (23, 48, 89),\n       (48, 25, 56), (63, 40, 38), (59, 69, 41), (79, 83, 68), (26, 17, 18), (41, 28, 13), (69, 70, 25), (89, 42, 57),\n       (77, 88, 54), (81, 65, 62), (85, 47, 53), (77, 14, 36), (81, 15, 74), (81, 52, 59), (32, 64, 70), (82, 89, 47),\n       (83, 72, 49), (35, 81, 84), (27, 71, 40), (65, 97, 25), (90, 29, 19), (77, 44, 68), (10, 97, 32), (59, 95, 19),\n       (20, 17, 62), (11, 99, 68), (36, 68, 70), (69, 83, 94), (63, 32, 71), (94, 22, 78), (37, 22, 38), (77, 92, 46),\n       (30, 76, 19), (72, 70, 24), (40, 15, 28), (87, 62, 25), (27, 52, 51), (24, 49, 78), (14, 45, 58), (97, 73, 17),\n       (79, 27, 16), (37, 82, 72), (31, 71, 38), (53, 97, 47), (56, 16, 32), (77, 59, 24), (69, 69, 56), (20, 39, 77),\n       (24, 35, 72), (67, 56, 43), (71, 24, 97), (28, 94, 78), (82, 45, 10), (15, 75, 55), (21, 44, 25), (72, 64, 45),\n       (35, 88, 21), (18, 80, 75), (94, 69, 93), (39, 42, 41), (26, 15, 26), (28, 55, 45), (38, 25, 93), (55, 32, 94),\n       (47, 96, 12), (67, 95, 47), (80, 73, 49), (41, 22, 17)]\n\nfor p, f, c in pfc:\n    food2 = FoodInfo(p, f, c)\n    print(food1 + food2, food1 * p, food1 // c)", "output": "FoodInfo(89, 109, 44) FoodInfo(790, 1580, 2370) FoodInfo(0, 1, 2)\nFoodInfo(81, 66, 84) FoodInfo(710, 1420, 2130) FoodInfo(0, 0, 0)\nFoodInfo(85, 102, 67) FoodInfo(750, 1500, 2250) FoodInfo(0, 0, 0)\nFoodInfo(107, 31, 98) FoodInfo(970, 1940, 2910) FoodInfo(0, 0, 0)\nFoodInfo(46, 42, 117) FoodInfo(360, 720, 1080) FoodInfo(0, 0, 0)\nFoodInfo(22, 31, 106) FoodInfo(120, 240, 360) FoodInfo(0, 0, 0)\nFoodInfo(29, 107, 118) FoodInfo(190, 380, 570) FoodInfo(0, 0, 0)\nFoodInfo(98, 86, 48) FoodInfo(880, 1760, 2640) FoodInfo(0, 1, 1)\nFoodInfo(86, 117, 49) FoodInfo(760, 1520, 2280) FoodInfo(0, 1, 1)\nFoodInfo(37, 81, 57) FoodInfo(270, 540, 810) FoodInfo(0, 0, 1)\nFoodInfo(28, 104, 45) FoodInfo(180, 360, 540) FoodInfo(0, 1, 2)\nFoodInfo(89, 116, 123) FoodInfo(790, 1580, 2370) FoodInfo(0, 0, 0)\nFoodInfo(93, 119, 63) FoodInfo(830, 1660, 2490) FoodInfo(0, 0, 0)\nFoodInfo(32, 77, 114) FoodInfo(220, 440, 660) FoodInfo(0, 0, 0)\nFoodInfo(76, 44, 68) FoodInfo(660, 1320, 1980) FoodInfo(0, 0, 0)\nFoodInfo(100, 81, 61) FoodInfo(900, 1800, 2700) FoodInfo(0, 0, 0)\nFoodInfo(50, 111, 130) FoodInfo(400, 800, 1200) FoodInfo(0, 0, 0)\nFoodInfo(42, 66, 79) FoodInfo(320, 640, 960) FoodInfo(0, 0, 0)\nFoodInfo(82, 56, 113) FoodInfo(720, 1440, 2160) FoodInfo(0, 0, 0)\nFoodInfo(85, 109, 105) FoodInfo(750, 1500, 2250) FoodInfo(0, 0, 0)\nFoodInfo(47, 70, 113) FoodInfo(370, 740, 1110) FoodInfo(0, 0, 0)\nFoodInfo(89, 105, 95) FoodInfo(790, 1580, 2370) FoodInfo(0, 0, 0)\nFoodInfo(73, 31, 112) FoodInfo(630, 1260, 1890) FoodInfo(0, 0, 0)\nFoodInfo(87, 59, 53) FoodInfo(770, 1540, 2310) FoodInfo(0, 0, 1)\nFoodInfo(39, 115, 111) FoodInfo(290, 580, 870) FoodInfo(0, 0, 0)\nFoodInfo(31, 71, 69) FoodInfo(210, 420, 630) FoodInfo(0, 0, 0)\nFoodInfo(110, 57, 106) FoodInfo(1000, 2000, 3000) FoodInfo(0, 0, 0)\nFoodInfo(86, 71, 60) FoodInfo(760, 1520, 2280) FoodInfo(0, 0, 1)\nFoodInfo(80, 82, 126) FoodInfo(700, 1400, 2100) FoodInfo(0, 0, 0)\nFoodInfo(81, 115, 57) FoodInfo(710, 1420, 2130) FoodInfo(0, 0, 1)\nFoodInfo(64, 53, 64) FoodInfo(540, 1080, 1620) FoodInfo(0, 0, 0)\nFoodInfo(33, 68, 119) FoodInfo(230, 460, 690) FoodInfo(0, 0, 0)\nFoodInfo(58, 45, 86) FoodInfo(480, 960, 1440) FoodInfo(0, 0, 0)\nFoodInfo(73, 60, 68) FoodInfo(630, 1260, 1890) FoodInfo(0, 0, 0)\nFoodInfo(69, 89, 71) FoodInfo(590, 1180, 1770) FoodInfo(0, 0, 0)\nFoodInfo(89, 103, 98) FoodInfo(790, 1580, 2370) FoodInfo(0, 0, 0)\nFoodInfo(36, 37, 48) FoodInfo(260, 520, 780) FoodInfo(0, 1, 1)\nFoodInfo(51, 48, 43) FoodInfo(410, 820, 1230) FoodInfo(0, 1, 2)\nFoodInfo(79, 90, 55) FoodInfo(690, 1380, 2070) FoodInfo(0, 0, 1)\nFoodInfo(99, 62, 87) FoodInfo(890, 1780, 2670) FoodInfo(0, 0, 0)\nFoodInfo(87, 108, 84) FoodInfo(770, 1540, 2310) FoodInfo(0, 0, 0)\nFoodInfo(91, 85, 92) FoodInfo(810, 1620, 2430) FoodInfo(0, 0, 0)\nFoodInfo(95, 67, 83) FoodInfo(850, 1700, 2550) FoodInfo(0, 0, 0)\nFoodInfo(87, 34, 66) FoodInfo(770, 1540, 2310) FoodInfo(0, 0, 0)\nFoodInfo(91, 35, 104) FoodInfo(810, 1620, 2430) FoodInfo(0, 0, 0)\nFoodInfo(91, 72, 89) FoodInfo(810, 1620, 2430) FoodInfo(0, 0, 0)\nFoodInfo(42, 84, 100) FoodInfo(320, 640, 960) FoodInfo(0, 0, 0)\nFoodInfo(92, 109, 77) FoodInfo(820, 1640, 2460) FoodInfo(0, 0, 0)\nFoodInfo(93, 92, 79) FoodInfo(830, 1660, 2490) FoodInfo(0, 0, 0)\nFoodInfo(45, 101, 114) FoodInfo(350, 700, 1050) FoodInfo(0, 0, 0)\nFoodInfo(37, 91, 70) FoodInfo(270, 540, 810) FoodInfo(0, 0, 0)\nFoodInfo(75, 117, 55) FoodInfo(650, 1300, 1950) FoodInfo(0, 0, 1)\nFoodInfo(100, 49, 49) FoodInfo(900, 1800, 2700) FoodInfo(0, 1, 1)\nFoodInfo(87, 64, 98) FoodInfo(770, 1540, 2310) FoodInfo(0, 0, 0)\nFoodInfo(20, 117, 62) FoodInfo(100, 200, 300) FoodInfo(0, 0, 0)\nFoodInfo(69, 115, 49) FoodInfo(590, 1180, 1770) FoodInfo(0, 1, 1)\nFoodInfo(30, 37, 92) FoodInfo(200, 400, 600) FoodInfo(0, 0, 0)\nFoodInfo(21, 119, 98) FoodInfo(110, 220, 330) FoodInfo(0, 0, 0)\nFoodInfo(46, 88, 100) FoodInfo(360, 720, 1080) FoodInfo(0, 0, 0)\nFoodInfo(79, 103, 124) FoodInfo(690, 1380, 2070) FoodInfo(0, 0, 0)\nFoodInfo(73, 52, 101) FoodInfo(630, 1260, 1890) FoodInfo(0, 0, 0)\nFoodInfo(104, 42, 108) FoodInfo(940, 1880, 2820) FoodInfo(0, 0, 0)\nFoodInfo(47, 42, 68) FoodInfo(370, 740, 1110) FoodInfo(0, 0, 0)\nFoodInfo(87, 112, 76) FoodInfo(770, 1540, 2310) FoodInfo(0, 0, 0)\nFoodInfo(40, 96, 49) FoodInfo(300, 600, 900) FoodInfo(0, 1, 1)\nFoodInfo(82, 90, 54) FoodInfo(720, 1440, 2160) FoodInfo(0, 0, 1)\nFoodInfo(50, 35, 58) FoodInfo(400, 800, 1200) FoodInfo(0, 0, 1)\nFoodInfo(97, 82, 55) FoodInfo(870, 1740, 2610) FoodInfo(0, 0, 1)\nFoodInfo(37, 72, 81) FoodInfo(270, 540, 810) FoodInfo(0, 0, 0)\nFoodInfo(34, 69, 108) FoodInfo(240, 480, 720) FoodInfo(0, 0, 0)\nFoodInfo(24, 65, 88) FoodInfo(140, 280, 420) FoodInfo(0, 0, 0)\nFoodInfo(107, 93, 47) FoodInfo(970, 1940, 2910) FoodInfo(0, 1, 1)\nFoodInfo(89, 47, 46) FoodInfo(790, 1580, 2370) FoodInfo(0, 1, 1)\nFoodInfo(47, 102, 102) FoodInfo(370, 740, 1110) FoodInfo(0, 0, 0)\nFoodInfo(41, 91, 68) FoodInfo(310, 620, 930) FoodInfo(0, 0, 0)\nFoodInfo(63, 117, 77) FoodInfo(530, 1060, 1590) FoodInfo(0, 0, 0)\nFoodInfo(66, 36, 62) FoodInfo(560, 1120, 1680) FoodInfo(0, 0, 0)\nFoodInfo(87, 79, 54) FoodInfo(770, 1540, 2310) FoodInfo(0, 0, 1)\nFoodInfo(79, 89, 86) FoodInfo(690, 1380, 2070) FoodInfo(0, 0, 0)\nFoodInfo(30, 59, 107) FoodInfo(200, 400, 600) FoodInfo(0, 0, 0)\nFoodInfo(34, 55, 102) FoodInfo(240, 480, 720) FoodInfo(0, 0, 0)\nFoodInfo(77, 76, 73) FoodInfo(670, 1340, 2010) FoodInfo(0, 0, 0)\nFoodInfo(81, 44, 127) FoodInfo(710, 1420, 2130) FoodInfo(0, 0, 0)\nFoodInfo(38, 114, 108) FoodInfo(280, 560, 840) FoodInfo(0, 0, 0)\nFoodInfo(92, 65, 40) FoodInfo(820, 1640, 2460) FoodInfo(1, 2, 3)\nFoodInfo(25, 95, 85) FoodInfo(150, 300, 450) FoodInfo(0, 0, 0)\nFoodInfo(31, 64, 55) FoodInfo(210, 420, 630) FoodInfo(0, 0, 1)\nFoodInfo(82, 84, 75) FoodInfo(720, 1440, 2160) FoodInfo(0, 0, 0)\nFoodInfo(45, 108, 51) FoodInfo(350, 700, 1050) FoodInfo(0, 0, 1)\nFoodInfo(28, 100, 105) FoodInfo(180, 360, 540) FoodInfo(0, 0, 0)\nFoodInfo(104, 89, 123) FoodInfo(940, 1880, 2820) FoodInfo(0, 0, 0)\nFoodInfo(49, 62, 71) FoodInfo(390, 780, 1170) FoodInfo(0, 0, 0)\nFoodInfo(36, 35, 56) FoodInfo(260, 520, 780) FoodInfo(0, 0, 1)\nFoodInfo(38, 75, 75) FoodInfo(280, 560, 840) FoodInfo(0, 0, 0)\nFoodInfo(48, 45, 123) FoodInfo(380, 760, 1140) FoodInfo(0, 0, 0)\nFoodInfo(65, 52, 124) FoodInfo(550, 1100, 1650) FoodInfo(0, 0, 0)\nFoodInfo(57, 116, 42) FoodInfo(470, 940, 1410) FoodInfo(0, 1, 2)\nFoodInfo(77, 115, 77) FoodInfo(670, 1340, 2010) FoodInfo(0, 0, 0)\nFoodInfo(90, 93, 79) FoodInfo(800, 1600, 2400) FoodInfo(0, 0, 0)\nFoodInfo(51, 42, 47) FoodInfo(410, 820, 1230) FoodInfo(0, 1, 1)"}, {"id": 4, "input": "pfc = [(880, 1760, 2640), (910, 1820, 2730), (850, 1700, 2550), (430, 860, 1290), (260, 520, 780), (620, 1240, 1860),\n          (850, 1700, 2550), (380, 760, 1140), (580, 1160, 1740), (480, 960, 1440), (540, 1080, 1620),\n          (750, 1500, 2250), (410, 820, 1230), (1000, 2000, 3000), (810, 1620, 2430), (50, 100, 150), (530, 1060, 1590),\n          (860, 1720, 2580), (900, 1800, 2700), (180, 360, 540), (810, 1620, 2430), (190, 380, 570), (370, 740, 1110),\n          (520, 1040, 1560), (400, 800, 1200), (430, 860, 1290), (70, 140, 210), (440, 880, 1320), (860, 1720, 2580),\n          (710, 1420, 2130), (870, 1740, 2610), (860, 1720, 2580), (960, 1920, 2880), (560, 1120, 1680),\n          (120, 240, 360), (800, 1600, 2400), (290, 580, 870), (660, 1320, 1980), (930, 1860, 2790), (790, 1580, 2370),\n          (160, 320, 480), (770, 1540, 2310), (970, 1940, 2910), (950, 1900, 2850), (330, 660, 990), (130, 260, 390),\n          (660, 1320, 1980), (190, 380, 570), (380, 760, 1140), (970, 1940, 2910), (750, 1500, 2250), (140, 280, 420),\n          (620, 1240, 1860), (410, 820, 1230), (310, 620, 930), (250, 500, 750), (670, 1340, 2010), (660, 1320, 1980),\n          (70, 140, 210), (140, 280, 420), (370, 740, 1110), (480, 960, 1440), (100, 200, 300), (280, 560, 840),\n          (240, 480, 720), (900, 1800, 2700), (400, 800, 1200), (850, 1700, 2550), (240, 480, 720), (970, 1940, 2910),\n          (210, 420, 630), (260, 520, 780), (700, 1400, 2100), (220, 440, 660), (360, 720, 1080), (250, 500, 750),\n          (870, 1740, 2610), (170, 340, 510), (340, 680, 1020), (750, 1500, 2250), (840, 1680, 2520), (400, 800, 1200),\n          (210, 420, 630), (730, 1460, 2190), (220, 440, 660), (400, 800, 1200), (450, 900, 1350), (770, 1540, 2310),\n          (600, 1200, 1800), (280, 560, 840), (140, 280, 420), (810, 1620, 2430), (750, 1500, 2250), (220, 440, 660),\n          (550, 1100, 1650), (90, 180, 270), (380, 760, 1140), (960, 1920, 2880), (990, 1980, 2970), (550, 1100, 1650)]\n\nfor p, f, c in pfc:\n    food = FoodInfo(p, f, c)\n    print(food / 10)", "output": "FoodInfo(88.0, 176.0, 264.0)\nFoodInfo(91.0, 182.0, 273.0)\nFoodInfo(85.0, 170.0, 255.0)\nFoodInfo(43.0, 86.0, 129.0)\nFoodInfo(26.0, 52.0, 78.0)\nFoodInfo(62.0, 124.0, 186.0)\nFoodInfo(85.0, 170.0, 255.0)\nFoodInfo(38.0, 76.0, 114.0)\nFoodInfo(58.0, 116.0, 174.0)\nFoodInfo(48.0, 96.0, 144.0)\nFoodInfo(54.0, 108.0, 162.0)\nFoodInfo(75.0, 150.0, 225.0)\nFoodInfo(41.0, 82.0, 123.0)\nFoodInfo(100.0, 200.0, 300.0)\nFoodInfo(81.0, 162.0, 243.0)\nFoodInfo(5.0, 10.0, 15.0)\nFoodInfo(53.0, 106.0, 159.0)\nFoodInfo(86.0, 172.0, 258.0)\nFoodInfo(90.0, 180.0, 270.0)\nFoodInfo(18.0, 36.0, 54.0)\nFoodInfo(81.0, 162.0, 243.0)\nFoodInfo(19.0, 38.0, 57.0)\nFoodInfo(37.0, 74.0, 111.0)\nFoodInfo(52.0, 104.0, 156.0)\nFoodInfo(40.0, 80.0, 120.0)\nFoodInfo(43.0, 86.0, 129.0)\nFoodInfo(7.0, 14.0, 21.0)\nFoodInfo(44.0, 88.0, 132.0)\nFoodInfo(86.0, 172.0, 258.0)\nFoodInfo(71.0, 142.0, 213.0)\nFoodInfo(87.0, 174.0, 261.0)\nFoodInfo(86.0, 172.0, 258.0)\nFoodInfo(96.0, 192.0, 288.0)\nFoodInfo(56.0, 112.0, 168.0)\nFoodInfo(12.0, 24.0, 36.0)\nFoodInfo(80.0, 160.0, 240.0)\nFoodInfo(29.0, 58.0, 87.0)\nFoodInfo(66.0, 132.0, 198.0)\nFoodInfo(93.0, 186.0, 279.0)\nFoodInfo(79.0, 158.0, 237.0)\nFoodInfo(16.0, 32.0, 48.0)\nFoodInfo(77.0, 154.0, 231.0)\nFoodInfo(97.0, 194.0, 291.0)\nFoodInfo(95.0, 190.0, 285.0)\nFoodInfo(33.0, 66.0, 99.0)\nFoodInfo(13.0, 26.0, 39.0)\nFoodInfo(66.0, 132.0, 198.0)\nFoodInfo(19.0, 38.0, 57.0)\nFoodInfo(38.0, 76.0, 114.0)\nFoodInfo(97.0, 194.0, 291.0)\nFoodInfo(75.0, 150.0, 225.0)\nFoodInfo(14.0, 28.0, 42.0)\nFoodInfo(62.0, 124.0, 186.0)\nFoodInfo(41.0, 82.0, 123.0)\nFoodInfo(31.0, 62.0, 93.0)\nFoodInfo(25.0, 50.0, 75.0)\nFoodInfo(67.0, 134.0, 201.0)\nFoodInfo(66.0, 132.0, 198.0)\nFoodInfo(7.0, 14.0, 21.0)\nFoodInfo(14.0, 28.0, 42.0)\nFoodInfo(37.0, 74.0, 111.0)\nFoodInfo(48.0, 96.0, 144.0)\nFoodInfo(10.0, 20.0, 30.0)\nFoodInfo(28.0, 56.0, 84.0)\nFoodInfo(24.0, 48.0, 72.0)\nFoodInfo(90.0, 180.0, 270.0)\nFoodInfo(40.0, 80.0, 120.0)\nFoodInfo(85.0, 170.0, 255.0)\nFoodInfo(24.0, 48.0, 72.0)\nFoodInfo(97.0, 194.0, 291.0)\nFoodInfo(21.0, 42.0, 63.0)\nFoodInfo(26.0, 52.0, 78.0)\nFoodInfo(70.0, 140.0, 210.0)\nFoodInfo(22.0, 44.0, 66.0)\nFoodInfo(36.0, 72.0, 108.0)\nFoodInfo(25.0, 50.0, 75.0)\nFoodInfo(87.0, 174.0, 261.0)\nFoodInfo(17.0, 34.0, 51.0)\nFoodInfo(34.0, 68.0, 102.0)\nFoodInfo(75.0, 150.0, 225.0)\nFoodInfo(84.0, 168.0, 252.0)\nFoodInfo(40.0, 80.0, 120.0)\nFoodInfo(21.0, 42.0, 63.0)\nFoodInfo(73.0, 146.0, 219.0)\nFoodInfo(22.0, 44.0, 66.0)\nFoodInfo(40.0, 80.0, 120.0)\nFoodInfo(45.0, 90.0, 135.0)\nFoodInfo(77.0, 154.0, 231.0)\nFoodInfo(60.0, 120.0, 180.0)\nFoodInfo(28.0, 56.0, 84.0)\nFoodInfo(14.0, 28.0, 42.0)\nFoodInfo(81.0, 162.0, 243.0)\nFoodInfo(75.0, 150.0, 225.0)\nFoodInfo(22.0, 44.0, 66.0)\nFoodInfo(55.0, 110.0, 165.0)\nFoodInfo(9.0, 18.0, 27.0)\nFoodInfo(38.0, 76.0, 114.0)\nFoodInfo(96.0, 192.0, 288.0)\nFoodInfo(99.0, 198.0, 297.0)\nFoodInfo(55.0, 110.0, 165.0)"}, {"id": 5, "input": "food1 = FoodInfo(10, 20, 30)\nfood2 = FoodInfo(10, 20, 30)\n\nnot_supported = [food2, [], {}, set(), '', frozenset(), ()]\n\nfor item in not_supported:\n    print(food1.__add__(item))\n    print(food1.__floordiv__(item))\n    print(food1.__mul__(item))\n    print(food1.__truediv__(item))", "output": "FoodInfo(20, 40, 60)\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented"}, {"id": 6, "input": "pfc = [(751.26, 778.77, 947.51), (597.41, 508.5, 532.96), (800.55, 617.5, 525.14), (741.99, 785.53, 664.71),\n       (525.69, 892.41, 541.41), (888.8, 802.56, 868.78), (609.65, 855.43, 949.44), (705.25, 592.28, 738.72),\n       (514.88, 617.22, 557.5), (948.62, 938.7, 817.17), (783.98, 628.32, 686.38), (894.9, 815.81, 715.19),\n       (586.79, 826.68, 637.5), (670.53, 683.69, 841.56), (583.9, 607.34, 853.35), (954.67, 950.76, 822.19),\n       (718.94, 658.12, 537.2), (556.53, 686.17, 622.61), (699.8, 872.49, 908.3), (622.3, 920.97, 801.17)]\n\nFoodInfo.__round__ = lambda instance: FoodInfo(\n    round(instance.proteins, 2),\n    round(instance.fats, 2),\n    round(instance.carbohydrates, 2)\n)\n\nfood1 = FoodInfo(1000, 2000, 3000)\nfor p, f, c in pfc:\n    food2 = FoodInfo(p, f, c)\n    add_food = food1 + food2\n    mul_food = food1 * p\n    truediv_food = food1 // c\n    print(round(add_food), round(mul_food), round(truediv_food))", "output": "FoodInfo(1751.26, 2778.77, 3947.51) FoodInfo(751260.0, 1502520.0, 2253780.0) FoodInfo(1.0, 2.0, 3.0)\nFoodInfo(1597.41, 2508.5, 3532.96) FoodInfo(597410.0, 1194820.0, 1792230.0) FoodInfo(1.0, 3.0, 5.0)\nFoodInfo(1800.55, 2617.5, 3525.14) FoodInfo(800550.0, 1601100.0, 2401650.0) FoodInfo(1.0, 3.0, 5.0)\nFoodInfo(1741.99, 2785.53, 3664.71) FoodInfo(741990.0, 1483980.0, 2225970.0) FoodInfo(1.0, 3.0, 4.0)\nFoodInfo(1525.69, 2892.41, 3541.41) FoodInfo(525690.0, 1051380.0, 1577070.0) FoodInfo(1.0, 3.0, 5.0)\nFoodInfo(1888.8, 2802.56, 3868.78) FoodInfo(888800.0, 1777600.0, 2666400.0) FoodInfo(1.0, 2.0, 3.0)\nFoodInfo(1609.65, 2855.43, 3949.44) FoodInfo(609650.0, 1219300.0, 1828950.0) FoodInfo(1.0, 2.0, 3.0)\nFoodInfo(1705.25, 2592.28, 3738.72) FoodInfo(705250.0, 1410500.0, 2115750.0) FoodInfo(1.0, 2.0, 4.0)\nFoodInfo(1514.88, 2617.22, 3557.5) FoodInfo(514880.0, 1029760.0, 1544640.0) FoodInfo(1.0, 3.0, 5.0)\nFoodInfo(1948.62, 2938.7, 3817.17) FoodInfo(948620.0, 1897240.0, 2845860.0) FoodInfo(1.0, 2.0, 3.0)\nFoodInfo(1783.98, 2628.32, 3686.38) FoodInfo(783980.0, 1567960.0, 2351940.0) FoodInfo(1.0, 2.0, 4.0)\nFoodInfo(1894.9, 2815.81, 3715.19) FoodInfo(894900.0, 1789800.0, 2684700.0) FoodInfo(1.0, 2.0, 4.0)\nFoodInfo(1586.79, 2826.68, 3637.5) FoodInfo(586790.0, 1173580.0, 1760370.0) FoodInfo(1.0, 3.0, 4.0)\nFoodInfo(1670.53, 2683.69, 3841.56) FoodInfo(670530.0, 1341060.0, 2011590.0) FoodInfo(1.0, 2.0, 3.0)\nFoodInfo(1583.9, 2607.34, 3853.35) FoodInfo(583900.0, 1167800.0, 1751700.0) FoodInfo(1.0, 2.0, 3.0)\nFoodInfo(1954.67, 2950.76, 3822.19) FoodInfo(954670.0, 1909340.0, 2864010.0) FoodInfo(1.0, 2.0, 3.0)\nFoodInfo(1718.94, 2658.12, 3537.2) FoodInfo(718940.0, 1437880.0, 2156820.0) FoodInfo(1.0, 3.0, 5.0)\nFoodInfo(1556.53, 2686.17, 3622.61) FoodInfo(556530.0, 1113060.0, 1669590.0) FoodInfo(1.0, 3.0, 4.0)\nFoodInfo(1699.8, 2872.49, 3908.3) FoodInfo(699800.0, 1399600.0, 2099400.0) FoodInfo(1.0, 2.0, 3.0)\nFoodInfo(1622.3, 2920.97, 3801.17) FoodInfo(622300.0, 1244600.0, 1866900.0) FoodInfo(1.0, 2.0, 3.0)"}, {"id": 7, "input": "food = FoodInfo(10, 20, 30)\n\nprint(food.__add__(1))\nprint(food.__mul__(range(5)))\nprint(food.__truediv__([1, 2, 3]))\nprint(food.__floordiv__({4, 5, 6}))", "output": "NotImplemented\nNotImplemented\nNotImplemented\nNotImplemented"}], "interactive": false, "memoryLimit": 256, "timeLimit": 15000, "srcPath": "c:\\Users\\asald\\Documents\\OOP\\Module_5\\Module_5.5\\Module_5.5.9\\problem.py", "group": "OOP"}