{"name": "OOP: 5.6.14", "url": "https://stepik.org/lesson/805787/step/14", "tests": [{"id": 0, "input": "leave_even = Filter(lambda x: x % 2 == 0)\nnumbers = [1, 2, 3, 4, 5, 6]\n\nprint(leave_even(numbers))", "output": "[2, 4, 6]"}, {"id": 1, "input": "more_than_five = Filter(lambda x: x > 5)\nnumbers = [13, 1, 4, 10, 10, 7]\n\nprint(more_than_five(numbers))", "output": "[13, 10, 10, 7]"}, {"id": 2, "input": "non_empty = Filter(None)\n\nsequence = ([], False, 1, (), 'Linus Torvalds', {5, 6, 7}, True, {}, set(), '')\nprint(non_empty(sequence))", "output": "[1, 'Linus Torvalds', {5, 6, 7}, True]"}, {"id": 3, "input": "int_digits = Filter(lambda x: isinstance(x, int))\n\ndigits = [25759615.72, -9587762.56, -484.7, 5414, 4290, 2089384922248.2, 8.71, 79544971044.96, -74.49, 6206, 9458,\n          291588.56, 5399, 4927, 3942, 57953980234.91, 833, -6741.67, 9725, 6794, 7207, 1410, 8225, 5673.9, 5826, 2641,\n          1114, 9171, -18145574565225.8, 1386, 789, -4206.48, 3799, -1.81, 17188782342720.3, 9727, 1178, 4307, 135.49,\n          53830.85, -23714.99, 7535, 2568, -8.14, 3882, 1366, 8083, 2171, 2176, -5.75, -528164181.88, 336, -97.99, 7562,\n          23091544796.66, 2021, 3029, 9342, 1579.93, 1903, 4084, 7084, 9659, 47078386.76, 5566, 6158.41, 926, 9337,\n          9166, 1651762632245.22, 4186, 18862478.24, 6262, 8594, 212, 15422064.78, 3783, 6564, 3130, 3703, 2544, -59.33,\n          0.41, -49349065413725.0, 9329323372.46, 8.8, 8801, -48204534.25, 7837, 2138, 3125, -694424298989.1,\n          54427539603.1, 1800, 383, 6796, 767, -711.35, 887749021822.9, 7980268.97]\nprint(int_digits(digits))", "output": "[5414, 4290, 6206, 9458, 5399, 4927, 3942, 833, 9725, 6794, 7207, 1410, 8225, 5826, 2641, 1114, 9171, 1386, 789, 3799, 9727, 1178, 4307, 7535, 2568, 3882, 1366, 8083, 2171, 2176, 336, 7562, 2021, 3029, 9342, 1903, 4084, 7084, 9659, 5566, 926, 9337, 9166, 4186, 6262, 8594, 212, 3783, 6564, 3130, 3703, 2544, 8801, 7837, 2138, 3125, 1800, 383, 6796, 767]"}, {"id": 4, "input": "no_more_than_six = Filter(lambda x: len(x) <= 6)\n\nwords = ['everybody', 'Congress', 'model', 'likely', 'information', 'meeting', 'hard', 'reduce', 'visit', 'stuff',\n         'line', 'standard', 'from', 'help', 'usually', 'need', 'small', 'teacher', 'himself', 'century', 'reason',\n         'something', 'year', 'president', 'buy', 'case', 'ten', 'certainly', 'fear', 'special', 'goal', 'include',\n         'suffer', 'traditional', 'explain', 'me', 'into', 'executive', 'husband', 'health', 'five', 'minute', 'want',\n         'trip', 'see', 'politics', 'money', 'still', 'task', 'our', 'environment', 'beat', 'stay', 'quickly', 'above',\n         'increase', 'since', 'front', 'suggest', 'amount', 'will', 'production', 'hit', 'probably', 'present',\n         'science', 'improve', 'discover', 'scientist', 'state', 'total', 'speak', 'administration', 'experience',\n         'media', 'determine', 'cut', 'with', 'reveal', 'finish', 'short', 'share', 'new', 'eight', 'worker', 'someone',\n         'beyond', 'various', 'modern', 'most', 'brother', 'room', 'interest', 'a', 'agreement', 'treat', 'break',\n         'none', 'serious', 'cup']\n\nprint(no_more_than_six(words))", "output": "['model', 'likely', 'hard', 'reduce', 'visit', 'stuff', 'line', 'from', 'help', 'need', 'small', 'reason', 'year', 'buy', 'case', 'ten', 'fear', 'goal', 'suffer', 'me', 'into', 'health', 'five', 'minute', 'want', 'trip', 'see', 'money', 'still', 'task', 'our', 'beat', 'stay', 'above', 'since', 'front', 'amount', 'will', 'hit', 'state', 'total', 'speak', 'media', 'cut', 'with', 'reveal', 'finish', 'short', 'share', 'new', 'eight', 'worker', 'beyond', 'modern', 'most', 'room', 'a', 'treat', 'break', 'none', 'cup']"}, {"id": 5, "input": "empty_elements = Filter(lambda x: not x)\n\nsequence = [(1, 2, 3), [], set(), 'Beegeek', {}, {1: '12'}, False, True, '', [2023, 4]]\nprint(empty_elements(sequence))", "output": "[[], set(), {}, False, '']"}], "interactive": false, "memoryLimit": 256, "timeLimit": 15000, "srcPath": "c:\\Users\\asald\\Documents\\OOP\\Module_5\\Module_5.6\\Module_5.6.14\\problem.py", "group": "OOP"}