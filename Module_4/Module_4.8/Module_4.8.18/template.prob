{"name": "OOP: 4.8.18", "url": "https://stepik.org/lesson/802381/step/18", "tests": [{"id": 0, "input": "Formatter.format(1337)\nFormatter.format(20.77)", "output": "\u0426\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e: 1337\n\u0412\u0435\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e: 20.77"}, {"id": 1, "input": "Formatter.format([10, 20, 30, 40, 50])\nFormatter.format(([1, 3], [2, 4, 6]))", "output": "\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0441\u043f\u0438\u0441\u043a\u0430: 10, 20, 30, 40, 50\n\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043a\u043e\u0440\u0442\u0435\u0436\u0430: [1, 3], [2, 4, 6]"}, {"id": 2, "input": "Formatter.format({'Cuphead': 1, 'Mugman': 3})\nFormatter.format({1: 'one', 2: 'two'})\nFormatter.format({1: True, 0: False})", "output": "\u041f\u0430\u0440\u044b \u0441\u043b\u043e\u0432\u0430\u0440\u044f: ('Cuphead', 1), ('Mugman', 3)\n\u041f\u0430\u0440\u044b \u0441\u043b\u043e\u0432\u0430\u0440\u044f: (1, 'one'), (2, 'two')\n\u041f\u0430\u0440\u044b \u0441\u043b\u043e\u0432\u0430\u0440\u044f: (1, True), (0, False)"}, {"id": 3, "input": "try:\n    Formatter.format('All them years, Dutch, for this snake?')\nexcept TypeError as e:\n    print(e)", "output": "\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f"}, {"id": 4, "input": "not_supported = [str, type, bool, dict, tuple, list]\n\nfor item in not_supported:\n    try:\n        Formatter.format(item)\n    except TypeError as e:\n        print(e)", "output": "\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f\n\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f\n\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f\n\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f\n\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f\n\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f"}], "interactive": false, "memoryLimit": 256, "timeLimit": 15000, "srcPath": "c:\\Users\\asald\\Documents\\OOP\\Module_4\\Module_4.8\\Module_4.8.18\\problem.py", "group": "OOP"}