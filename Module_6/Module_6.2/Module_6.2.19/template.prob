{"name": "OOP: 6.2.19", "url": "https://stepik.org/lesson/805785/step/19", "tests": [{"id": 0, "input": "grouper = Grouper(['bee', 'geek', 'one', 'two', 'five', 'hi'], key=len)\n\nprint(grouper[2])\nprint(grouper[3])\nprint(grouper[4])", "output": "['hi']\n['bee', 'one', 'two']\n['geek', 'five']"}, {"id": 1, "input": "grouper = Grouper(['bee', 'geek', 'one', 'two', 'five', 'hi'], key=len)\n\nprint(3 in grouper)\nprint('bee' in grouper)", "output": "True\nFalse"}, {"id": 2, "input": "grouper = Grouper(['hi'], key=lambda s: s[0])\nprint(len(grouper))\n\ngrouper.add('hello')\ngrouper.add('bee')\ngrouper.add('big')\n\nprint(len(grouper))\n\ngrouper.add('geek')\nprint(grouper['h'])\nprint(grouper['b'])\nprint(grouper['g'])\n\nprint(len(grouper))", "output": "1\n2\n['hi', 'hello']\n['bee', 'big']\n['geek']\n3"}, {"id": 3, "input": "grouper = Grouper(['hi'], key=lambda s: s[0])\n\nprint(grouper.group_for('hello'))\nprint(grouper.group_for('bee'))\nprint(grouper['h'])\nprint('b' in grouper)", "output": "h\nb\n['hi']\nFalse"}, {"id": 4, "input": "data = [504, 506, 503, 507, 507, 508, 504, 510, 500, 503, 501, 502, 503, 502, 502, 510, 502, 500, 503, 508, 508, 502,\n        507, 500, 502, 501, 502, 504, 505, 505, 500, 501, 507, 504, 509, 507, 508, 508, 502, 510, 503, 501, 505, 501,\n        510, 505, 500, 507, 510, 507, 506, 507, 501, 502, 504, 506, 501, 501, 506, 502, 508, 505, 509, 509, 502, 506,\n        507, 505, 505, 507, 503, 505, 504, 510, 505, 503, 508, 508, 504, 504, 510, 501, 506, 503, 502, 508, 507, 503,\n        501, 506, 505, 506, 504, 504, 505, 503, 507, 504, 507, 510]\n\ngrouper = Grouper(data, key=lambda x: x % 2 == 0)\nprint(grouper[True])\nprint(grouper[False])", "output": "[504, 506, 508, 504, 510, 500, 502, 502, 502, 510, 502, 500, 508, 508, 502, 500, 502, 502, 504, 500, 504, 508, 508, 502, 510, 510, 500, 510, 506, 502, 504, 506, 506, 502, 508, 502, 506, 504, 510, 508, 508, 504, 504, 510, 506, 502, 508, 506, 506, 504, 504, 504, 510]\n[503, 507, 507, 503, 501, 503, 503, 507, 501, 505, 505, 501, 507, 509, 507, 503, 501, 505, 501, 505, 507, 507, 507, 501, 501, 501, 505, 509, 509, 507, 505, 505, 507, 503, 505, 505, 503, 501, 503, 507, 503, 501, 505, 505, 503, 507, 507]"}, {"id": 5, "input": "from collections import namedtuple\n\nPerson = namedtuple('Person', ['name', 'age', 'height'])\n\npersons = [Person('Tim', 63, 193), Person('Eva', 47, 158),\n           Person('Mark', 71, 172), Person('Alex', 45, 193),\n           Person('Jeff', 63, 193), Person('Ryan', 41, 184),\n           Person('Ariana', 28, 158), Person('Liam', 69, 193)]\n\n\ngrouper = Grouper(persons, key=lambda x: x.height)\nprint(sorted(grouper))", "output": "[(158, [Person(name='Eva', age=47, height=158), Person(name='Ariana', age=28, height=158)]), (172, [Person(name='Mark', age=71, height=172)]), (184, [Person(name='Ryan', age=41, height=184)]), (193, [Person(name='Tim', age=63, height=193), Person(name='Alex', age=45, height=193), Person(name='Jeff', age=63, height=193), Person(name='Liam', age=69, height=193)])]"}, {"id": 6, "input": "grouper = Grouper([], key=lambda x: x)\nprint(*grouper)", "output": ""}, {"id": 7, "input": "d = list(range(1, 100))\ngrouper = Grouper(d, bool)\nprint(*grouper)\n\nd.append(100)\nprint(*grouper)", "output": "(True, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99])\n(True, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99])"}, {"id": 8, "input": "d = range(1, 100)\ngrouper = Grouper(d, bool)\nprint(*grouper)\n\ngrouper.add(100)\nprint(*grouper)", "output": "(True, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99])\n(True, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100])"}], "interactive": false, "memoryLimit": 256, "timeLimit": 15000, "srcPath": "c:\\Users\\asald\\Documents\\OOP\\Module_6\\Module_6.2\\Module_6.2.19\\problem.py", "group": "OOP"}