{"name": "OOP: 9.1.10", "url": "https://stepik.org/lesson/864077/step/10", "tests": [{"id": 0, "input": "game = Game(14, 18, 40)\nprint(game.rows)\nprint(game.cols)\nprint(game.mines)\n\ncell = game.board[0][0]\n\nprint(cell.row)\nprint(cell.col)\nprint(0 <= cell.neighbours <= 3)", "output": "14\n18\n40\n0\n0\nTrue"}, {"id": 1, "input": "game = Game(10, 8, 14)\n\nfor r, c in ((0, 0), (0, -1), (-1, 0), (-1, -1)):\n    cell = game.board[r][c]\n    print(0 <= cell.neighbours <= 3, type(cell))", "output": "True <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>"}, {"id": 2, "input": "game = Game(10, 8, 14)\n\nfor r in (0, -1):\n    for c in range(1, game.cols - 1):\n        cell = game.board[r][c]\n        print(0 <= cell.neighbours <= 5, type(cell))", "output": "True <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>"}, {"id": 3, "input": "game = Game(10, 8, 14)\n\nfor c in (0, -1):\n    for r in range(1, game.rows - 1):\n        cell = game.board[r][c]\n        print(0 <= cell.neighbours <= 5, type(cell))", "output": "True <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>\nTrue <class '__main__.Cell'>"}, {"id": 4, "input": "n, m = 10, 8\ngame = Game(n, m, 14)\ntotal_mines = 0\n\nfor r in range(n):\n    for c in range(m):\n        if not game.board[r][c].mine:\n            print(get_neighbours_count(r, c, game) == game.board[r][c].neighbours)\n        total_mines += game.board[r][c].mine\n\n\nprint(total_mines == game.mines)\nprint(total_mines)\nprint(game.mines)", "output": "True\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\n14\n14"}], "interactive": false, "memoryLimit": 256, "timeLimit": 15000, "srcPath": "/home/asalde_le1/\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b/OOP/Module_9/Module_9.1/Module_9.1.10/problem.py", "group": "OOP"}