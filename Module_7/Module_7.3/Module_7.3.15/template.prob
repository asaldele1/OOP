{"name": "OOP: 7.3.15", "url": "https://stepik.org/lesson/816515/step/15", "tests": [{"id": 0, "input": "s1 = FuzzyString('BeeGeek')\ns2 = FuzzyString('beegeek')\n\nprint(s1 == s2)\nprint(s1 in s2)\nprint(s2 in s1)\nprint(s2 not in s1)", "output": "True\nTrue\nTrue\nFalse"}, {"id": 1, "input": "s = FuzzyString('BeeGeek')\n\nprint(s != 'BEEGEEK')\nprint(s == 'BEEGEEK')\nprint(s != 'beegeek')\nprint(s == 'beegeek')\nprint(s >= 'BEEGEEK')\nprint(s <= 'BEEGEEK')\nprint(s > 'BEEGEEK')\nprint(s < 'BEEGEEK')", "output": "False\nTrue\nFalse\nTrue\nTrue\nTrue\nFalse\nFalse"}, {"id": 2, "input": "s = FuzzyString('BeeGeek')\n\nprint(s != 'BEE GEEK')\nprint(s == 'BEE GEEK')\nprint(s != 'bee geek')\nprint(s == 'bee geek')", "output": "True\nFalse\nTrue\nFalse"}, {"id": 3, "input": "s = FuzzyString('patrick')\n\nwords = ['patrick', 'Patrick', 'pAtrick', 'PAtrick', 'paTrick', 'PaTrick', 'pATrick', 'PATrick', 'patRick', 'PatRick',\n         'pAtRick', 'PAtRick', 'paTRick', 'PaTRick', 'pATRick', 'PATRick', 'patrIck', 'PatrIck', 'pAtrIck', 'PAtrIck',\n         'paTrIck', 'PaTrIck', 'pATrIck', 'PATrIck', 'patRIck', 'PatRIck', 'pAtRIck', 'PAtRIck', 'paTRIck', 'PaTRIck',\n         'pATRIck', 'PATRIck', 'patriCk', 'PatriCk', 'pAtriCk', 'PAtriCk', 'paTriCk', 'PaTriCk', 'pATriCk', 'PATriCk',\n         'patRiCk', 'PatRiCk', 'pAtRiCk', 'PAtRiCk', 'paTRiCk', 'PaTRiCk', 'pATRiCk', 'PATRiCk', 'patrICk', 'PatrICk',\n         'pAtrICk', 'PAtrICk', 'paTrICk', 'PaTrICk', 'pATrICk', 'PATrICk', 'patRICk', 'PatRICk', 'pAtRICk', 'PAtRICk',\n         'paTRICk', 'PaTRICk', 'pATRICk', 'PATRICk', 'patricK', 'PatricK', 'pAtricK', 'PAtricK', 'paTricK', 'PaTricK',\n         'pATricK', 'PATricK', 'patRicK', 'PatRicK', 'pAtRicK', 'PAtRicK', 'paTRicK', 'PaTRicK', 'pATRicK', 'PATRicK',\n         'patrIcK', 'PatrIcK', 'pAtrIcK', 'PAtrIcK', 'paTrIcK', 'PaTrIcK', 'pATrIcK', 'PATrIcK', 'patRIcK', 'PatRIcK',\n         'pAtRIcK', 'PAtRIcK', 'paTRIcK', 'PaTRIcK', 'pATRIcK', 'PATRIcK', 'patriCK', 'PatriCK', 'pAtriCK', 'PAtriCK',\n         'paTriCK', 'PaTriCK', 'pATriCK', 'PATriCK', 'patRiCK', 'PatRiCK', 'pAtRiCK', 'PAtRiCK', 'paTRiCK', 'PaTRiCK',\n         'pATRiCK', 'PATRiCK', 'patrICK', 'PatrICK', 'pAtrICK', 'PAtrICK', 'paTrICK', 'PaTrICK', 'pATrICK', 'PATrICK',\n         'patRICK', 'PatRICK', 'pAtRICK', 'PAtRICK', 'paTRICK', 'PaTRICK', 'pATRICK', 'PATRICK']\n\nprint(all(s == item for item in words))", "output": "True"}, {"id": 4, "input": "s1 = FuzzyString('ManTrida')\ns2 = FuzzyString('MANTRIDA')\n\nprint(s1 == s2)\nprint(s1 != s2)\nprint(s1 >= s2)\nprint(s1 <= s2)\nprint(s1 > s2)\nprint(s1 < s2)", "output": "True\nFalse\nTrue\nTrue\nFalse\nFalse"}, {"id": 5, "input": "s = FuzzyString('BeeGeek')\n\nprint(s.__eq__(1))\nprint(s.__ne__(1.1))\nprint(s.__gt__(range(5)))\nprint(s.__lt__([1, 2, 3]))\nprint(s.__ge__({4, 5, 6}))\nprint(s.__le__({1: 'one'}))", "output": "NotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented\nNotImplemented"}, {"id": 6, "input": "s1 = FuzzyString('BeeGeek')\ns2 = FuzzyString('bee')\n\nprint(s2 in s1)\nprint(s1 in s2)", "output": "True\nFalse"}], "interactive": false, "memoryLimit": 256, "timeLimit": 15000, "srcPath": "/home/asalde_le1/\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b/OOP/Module_7/Module_7.3/Module_7.3.15/problem.py", "group": "OOP"}