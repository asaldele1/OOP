{"name": "OOP: 7.5.26", "url": "https://stepik.org/lesson/872533/step/26", "tests": [{"id": 0, "input": "numbers = SortedList([5, 3, 4, 2, 1])\n\n\nprint(numbers)\nprint(numbers[1])\nprint(numbers[-2])\nnumbers.add(0)\nprint(numbers)\nnumbers.discard(4)\nprint(numbers)\nnumbers.update([4, 6])\nprint(numbers)", "output": "SortedList([1, 2, 3, 4, 5])\n2\n4\nSortedList([0, 1, 2, 3, 4, 5])\nSortedList([0, 1, 2, 3, 5])\nSortedList([0, 1, 2, 3, 4, 5, 6])"}, {"id": 1, "input": "numbers = SortedList([5, 3, 4, 2, 1])\n\nprint(len(numbers))\nprint(*numbers)\nprint(1 in numbers)\nprint(6 in numbers)", "output": "5\n1 2 3 4 5\nTrue\nFalse"}, {"id": 2, "input": "numbers1 = SortedList([1, 3, 5])\nnumbers2 = SortedList([2, 4])\n\nprint(numbers1 + numbers2)\nprint(numbers1 * 2)\nprint(numbers2 * 2)", "output": "SortedList([1, 2, 3, 4, 5])\nSortedList([1, 1, 3, 3, 5, 5])\nSortedList([2, 2, 4, 4])"}, {"id": 3, "input": "numbers = SortedList([5, 4, 3, 2, 1])\n\nprint(numbers)\ndel numbers[1]\n\nprint(numbers)\ndel numbers[-1]\n\nprint(numbers)\n\ntry:\n    numbers[0] = 7\nexcept NotImplementedError:\n    print('\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f')", "output": "SortedList([1, 2, 3, 4, 5])\nSortedList([1, 3, 4, 5])\nSortedList([1, 3, 4])\n\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f"}, {"id": 4, "input": "numbers = SortedList([1, 2, 3, 4, 5])\n\ntry:\n    numbers.append(6)\nexcept NotImplementedError:\n    print('\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f')", "output": "\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f"}, {"id": 5, "input": "numbers = SortedList([1, 2, 3, 4, 5])\n\ntry:\n    numbers.insert(0, 0)\nexcept NotImplementedError:\n    print('\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f')", "output": "\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f"}, {"id": 6, "input": "numbers = SortedList([1, 2, 3, 4, 5])\n\ntry:\n    numbers.extend([6, 7, 8, 9, 10])\nexcept NotImplementedError:\n    print('\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f')", "output": "\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f"}, {"id": 7, "input": "numbers = SortedList([1, 2, 3, 4, 5])\n\ntry:\n    numbers.reverse()\nexcept NotImplementedError:\n    print('\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f')", "output": "\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f"}, {"id": 8, "input": "numbers = SortedList([1, 2, 3, 4, 5])\n\ntry:\n    reversed(numbers)\nexcept NotImplementedError:\n    print('\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f')", "output": "\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f"}, {"id": 9, "input": "numbers = SortedList([5, 4, 3, 2, 1])\n\nnumbers.update([5, 4, 3, 2, 1])\nprint(*numbers)\n\nnumbers *= 3\nprint(*numbers)\n\nnumbers.discard(4)\nprint(*numbers)", "output": "1 1 2 2 3 3 4 4 5 5\n1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3 4 4 4 4 4 4 5 5 5 5 5 5\n1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3 5 5 5 5 5 5"}, {"id": 10, "input": "numbers1 = SortedList([1, 3, 5])\nnumbers2 = SortedList([2, 4])\n\nid1_numbers1 = id(numbers1)\nid1_numbers2 = id(numbers2)\n\nnumbers1 += numbers2\nnumbers2 *= 2\n\nid2_numbers1 = id(numbers1)\nid2_numbers2 = id(numbers2)\n\nprint(id1_numbers1 == id2_numbers1)\nprint(id1_numbers2 == id2_numbers2)\nprint(3 in numbers1)", "output": "True\nTrue\nTrue"}, {"id": 11, "input": "data = [5, 4, 3, 2, 1]\nnumbers = SortedList(data)\n\nprint(numbers)\ndata.pop()\n\nprint(data)\nprint(numbers)", "output": "SortedList([1, 2, 3, 4, 5])\n[5, 4, 3, 2]\nSortedList([1, 2, 3, 4, 5])"}, {"id": 12, "input": "numbers = SortedList()\nprint(numbers)", "output": "SortedList([])"}, {"id": 13, "input": "numbers1 = SortedList([5, 3, 4, 2, 1])\nnumbers2 = SortedList([10, 9, 8, 7, 6])\n\nnumbers1 = numbers1 + numbers2\nprint(numbers1, type(numbers1))\n\nnumbers2 = numbers2 * 2\nprint(numbers2, type(numbers2))", "output": "SortedList([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) <class '__main__.SortedList'>\nSortedList([6, 6, 7, 7, 8, 8, 9, 9, 10, 10]) <class '__main__.SortedList'>"}, {"id": 14, "input": "numbers1 = SortedList([5, 3, 4, 2, 1])\nnumbers2 = SortedList([10, 9, 8, 7, 6])\n\nnumbers1 += numbers2\nprint(numbers1, type(numbers1))\n\nnumbers2 *= 2\nprint(numbers2, type(numbers2))", "output": "SortedList([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) <class '__main__.SortedList'>\nSortedList([6, 6, 7, 7, 8, 8, 9, 9, 10, 10]) <class '__main__.SortedList'>"}, {"id": 15, "input": "numbers1 = SortedList([5, 3, 4, 2, 1])\nnumbers2 = SortedList([10, 9, 8, 7, 6])\n\nnumbers1 = numbers1 * -100\nprint(numbers1)\n\nnumbers2 *= 0\nprint(numbers2)", "output": "SortedList([])\nSortedList([])"}, {"id": 16, "input": "numbers = SortedList([5, 3, 4, 2, 1])\nprint(numbers.__add__(1))\nprint(numbers.__iadd__(1.1))\nprint(numbers.__mul__([1, 2, 3]))\nprint(numbers.__imul__({4, 5, 6}))", "output": "NotImplemented\nNotImplemented\nNotImplemented\nNotImplemented"}], "interactive": false, "memoryLimit": 256, "timeLimit": 15000, "srcPath": "/home/asalde_le1/\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b/OOP/Module_7/Module_7.5/Module_7.5.26/problem.py", "group": "OOP"}