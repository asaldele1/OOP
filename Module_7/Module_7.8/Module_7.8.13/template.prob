{"name": "OOP: 7.8.13", "url": "https://stepik.org/lesson/804638/step/13", "tests": [{"id": 0, "input": "conference = Conference()\n\nconference.add(Lecture('\u041f\u0440\u043e\u0441\u0442\u044b\u0435 \u0447\u0438\u0441\u043b\u0430', '08:00', '01:30'))\nconference.add(Lecture('\u0416\u0438\u0437\u043d\u044c \u043f\u043e\u0441\u043b\u0435 ChatGPT', '10:00', '02:00'))\nconference.add(Lecture('\u041c\u0443\u0440\u0430\u0432\u044c\u0438\u043d\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c', '13:30', '01:50'))\nprint(conference.total())\nprint(conference.longest_lecture())\nprint(conference.longest_break())", "output": "05:20\n02:00\n01:30"}, {"id": 1, "input": "conference = Conference()\nconference.add(Lecture('\u041f\u0440\u043e\u0441\u0442\u044b\u0435 \u0447\u0438\u0441\u043b\u0430', '08:00', '01:30'))\n\ntry:\n    conference.add(Lecture('\u0416\u0438\u0437\u043d\u044c \u043f\u043e\u0441\u043b\u0435 ChatGPT', '09:00', '02:00'))\nexcept ValueError as error:\n    print(error)", "output": "\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e"}, {"id": 2, "input": "conference = Conference()\nconference.add(Lecture('\u041f\u0440\u043e\u0441\u0442\u044b\u0435 \u0447\u0438\u0441\u043b\u0430', '08:00', '01:00'))\nconference.add(Lecture('\u0416\u0438\u0437\u043d\u044c \u043f\u043e\u0441\u043b\u0435 ChatGPT', '11:00', '02:00'))\n\ntry:\n    conference.add(Lecture('\u041c\u0443\u0440\u0430\u0432\u044c\u0438\u043d\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c', '10:00', '04:00'))\nexcept ValueError as error:\n    print(error)", "output": "\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e"}, {"id": 3, "input": "conference = Conference()\nconference.add(Lecture('\u041c\u0443\u0440\u0430\u0432\u044c\u0438\u043d\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c', '09:30', '02:00'))\nconference.add(Lecture('\u0416\u0438\u0437\u043d\u044c \u043f\u043e\u0441\u043b\u0435 ChatGPT', '11:45', '04:00'))\nconference.add(Lecture('\u041f\u0440\u043e\u0441\u0442\u044b\u0435 \u0447\u0438\u0441\u043b\u0430', '08:00', '01:30'))\n\nprint(conference.longest_lecture())\nprint(conference.longest_break())", "output": "04:00\n00:15"}, {"id": 4, "input": "conference = Conference()\nconference.add(Lecture('\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u041e\u041e\u041f', '09:30', '00:30'))\nconference.add(Lecture('\u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438 \u043a\u043b\u0430\u0441\u0441\u043e\u0432', '08:00', '01:30'))\nconference.add(Lecture('\u041c\u0435\u0442\u043e\u0434\u044b \u044d\u043a\u0437\u0435\u043c\u043b\u044f\u0440\u0430 \u043a\u043b\u0430\u0441\u0441\u0430', '10:30', '02:00'))\n\nprint(conference.longest_lecture())\nprint(conference.longest_break())", "output": "02:00\n00:30"}, {"id": 5, "input": "conference = Conference()\nconference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 @property', '09:30', '00:30'))\nconference.add(Lecture('\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430', '09:00', '00:30'))\nconference.add(Lecture('\u041c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0438 \u0430\u043a\u0441\u0435\u0441\u0441\u043e\u0440\u044b', '08:30', '00:30'))\n\nprint(conference.longest_lecture())\nprint(conference.longest_break())", "output": "00:30\n00:00"}, {"id": 6, "input": "conference = Conference()\nconference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b @classmethod \u0438 @staticmethod', '09:30', '00:30'))\n\ntry:\n    conference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 @singledispatchmethod', '09:30', '00:30'))\nexcept ValueError as e:\n    print(e)", "output": "\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e"}, {"id": 7, "input": "conference = Conference()\nconference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b @classmethod \u0438 @staticmethod', '09:30', '00:30'))\n\ntry:\n    conference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 @singledispatchmethod', '09:45', '00:30'))\nexcept ValueError as e:\n    print(e)", "output": "\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e"}, {"id": 8, "input": "conference = Conference()\nconference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b @classmethod \u0438 @staticmethod', '09:30', '00:30'))\n\ntry:\n    conference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 @singledispatchmethod', '09:59', '00:30'))\nexcept ValueError as e:\n    print(e)", "output": "\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e"}, {"id": 9, "input": "conference = Conference()\nconference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b @classmethod \u0438 @staticmethod', '09:30', '00:30'))\n\ntry:\n    conference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 @singledispatchmethod', '09:00', '00:35'))\nexcept ValueError as e:\n    print(e)", "output": "\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e"}, {"id": 10, "input": "conference = Conference()\nconference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b @classmethod \u0438 @staticmethod', '09:30', '00:30'))\nconference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 @singledispatchmethod', '09:00', '00:30'))\nconference.add(Lecture('\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435, \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u043e\u0447\u0438\u0449\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432', '11:00', '00:30'))\n\nstart_times = ['09:30', '09:45', '09:59', '09:00', '09:00', '09:15', '09:29', '08:30', '11:00', '11:15', '11:25', '10:45']\ndurations = ['00:30', '00:30', '00:30', '00:35', '00:15', '00:15', '00:30', '00:35', '00:20', '00:10', '00:35', '00:16']\n\nfor start_time, duration in zip(start_times, durations):\n    try:\n        conference.add(Lecture('\u0421\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432', start_time, duration))\n    except ValueError as e:\n        print(e)", "output": "\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e"}, {"id": 11, "input": "conference = Conference()\nconference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b @classmethod \u0438 @staticmethod', '09:30', '00:30'))\nconference.add(Lecture('\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 @singledispatchmethod', '09:00', '00:30'))\nconference.add(Lecture('\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435, \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u043e\u0447\u0438\u0449\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432', '11:00', '00:30'))\nconference.add(Lecture('\u0423\u043d\u0430\u0440\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u044b \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438', '10:45', '00:15'))\nconference.add(Lecture('\u0410\u0440\u0438\u0444\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438', '10:00', '00:30'))\nconference.add(Lecture('\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u043c\u044b\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b', '08:00', '01:00'))\n\nprint(conference.total())\nprint(conference.longest_lecture())\nprint(conference.longest_break())", "output": "03:15\n01:00\n00:15"}], "interactive": false, "memoryLimit": 256, "timeLimit": 15000, "srcPath": "/home/asalde_le1/\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b/OOP/Module_7/Module_7.8/Module_7.8.13/problem.py", "group": "OOP"}