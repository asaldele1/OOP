{"name": "OOP: 7.2.21", "url": "https://stepik.org/lesson/798678/step/21", "tests": [{"id": 0, "input": "class Point(FieldTracker):\n    fields = ('x', 'y', 'z')\n\n    def __init__(self, x, y, z):\n        self.x, self.y, self.z = x, y, z\n        super().__init__()\n\npoint = Point(1, 2, 3)\n\nprint(point.base('x'))\nprint(point.has_changed('x'))\nprint(point.changed())", "output": "1\nFalse\n{}"}, {"id": 1, "input": "class Point(FieldTracker):\n    fields = ('x', 'y', 'z')\n\n    def __init__(self, x, y, z):\n        self.x, self.y, self.z = x, y, z\n        super().__init__()\n\npoint = Point(1, 2, 3)\npoint.x = 0\npoint.z = 4\npoint.z = 5\n\nprint(point.base('x'))\nprint(point.base('z'))\nprint(point.has_changed('x'))\nprint(point.has_changed('z'))\nprint(point.changed())", "output": "1\n3\nTrue\nTrue\n{'x': 1, 'z': 3}"}, {"id": 2, "input": "class Point(FieldTracker):\n    fields = ('x', 'y', 'z')\n\n    def __init__(self, x, y, z):\n        self.x, self.y, self.z = x, y, z\n        super().__init__()\n\npoint = Point(1, 2, 3)\npoint.x = 0\npoint.z = 4\npoint.save()\n\nprint(point.base('x'))\nprint(point.base('z'))\nprint(point.has_changed('x'))\nprint(point.has_changed('z'))\nprint(point.changed())", "output": "0\n4\nFalse\nFalse\n{}"}, {"id": 3, "input": "class Point(FieldTracker):\n    fields = ('x', 'y', 'z')\n\n    def __init__(self, x, y, z):\n        self.x, self.y, self.z = x, y, z\n        super().__init__()\n\n\np = Point(1, 2, 3)\nprint(p.changed())\np.x = 4\nprint(p.changed())\nprint(p.x)\np.z = 6\nprint(p.changed())\np.save()\nprint(p.changed())\np.y = 8\nprint(p.changed())\nprint(p.y)\np.save()\nprint(p.changed())\np.save()\nprint(p.changed())", "output": "{}\n{'x': 1}\n4\n{'x': 1, 'z': 3}\n{}\n{'y': 2}\n8\n{}\n{}"}, {"id": 4, "input": "class Point(FieldTracker):\n    fields = ('x', 'y', 'z')\n\n    def __init__(self, x, y, z):\n        self.x, self.y, self.z = x, y, z\n        super().__init__()\n\n\np = Point(1, 2, 3)\nprint(p.has_changed('x'))\nprint(p.has_changed('y'))\nprint(p.has_changed('z'))\np.x = 4\nprint(p.has_changed('x'))\nprint(p.has_changed('y'))\nprint(p.has_changed('z'))\np.z = 6\nprint(p.has_changed('x'))\nprint(p.has_changed('y'))\nprint(p.has_changed('z'))\np.save()\nprint(p.has_changed('x'))\nprint(p.has_changed('y'))\nprint(p.has_changed('z'))\np.y = 8\nprint(p.has_changed('x'))\nprint(p.has_changed('y'))\nprint(p.has_changed('z'))\np.save()\nprint(p.has_changed('x'))\nprint(p.has_changed('y'))\nprint(p.has_changed('z'))", "output": "False\nFalse\nFalse\nTrue\nFalse\nFalse\nTrue\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse"}, {"id": 5, "input": "class Point(FieldTracker):\n    fields = ('x', 'y', 'z')\n\n    def __init__(self, x, y, z):\n        self.x, self.y, self.z = x, y, z\n        super().__init__()\n\n\np = Point(1, 2, 3)\nprint(p.base('x'))\np.x = 4\nprint(p.base('x'))\nprint(p.x)\np.z = 6\nprint(p.base('x'))\nprint(p.base('y'))\nprint(p.base('z'))\np.save()\nprint(p.base('x'))\nprint(p.base('y'))\nprint(p.base('z'))\np.y = 8\nprint(p.base('y'))\nprint(p.y)\np.save()\nprint(p.base('y'))", "output": "1\n1\n4\n1\n2\n3\n4\n2\n6\n2\n8\n8"}], "interactive": false, "memoryLimit": 256, "timeLimit": 15000, "srcPath": "/home/asalde_le1/\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b/OOP/Module_7/Module_7.2/Module_7.2.21/problem.py", "group": "OOP"}